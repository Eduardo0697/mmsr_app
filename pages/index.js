import Head from 'next/head'
import SearchBar from '../components/SearchBar';
import VideoPlayer from '../components/VideoPlayer';
import ResultList from '../components/ResultList';
import NoResults from '../components/NoResults';
import NavBar from '../components/NavBar';
import FooterContainer from '../components/FooterSection';
import { useState, useEffect, useRef } from 'react';


export default function Home() {

  const [search, setSearch] = useState('');
  const [querySuccesful, setquerySuccesful] = useState(false);
  const [songToPlay, setSongToPlay] = useState("");
  const [results, setResults] = useState([]);
  const [stateZero, setStateZero] = useState(true);
  const [clearSearchbox, setClearSearchbox] = useState(0)

  const extractVideoIdFromUrl = (url) => {
    const extractVideoId = /(?<=\=)(.*)$/g;
    const videoId =  extractVideoId.exec(url)["0"];
    return videoId
  }
  const sendQuery = (query) => {
    console.log("Fetch API", query) // Send to fastapi
    fetch('/api/video/10')
      .then((response) => response.json())
      .then((songsInfo) => {
          
          const results = songsInfo.map( el => { 
            return {
              "id" : el.id, 
              "idVideo" : extractVideoIdFromUrl(el.url),
            }
          })
          console.log('Song Info recovered', results);
          setquerySuccesful(true)
          setResults(results)

      });
  }

  const handleHomeOnClick = () => {
    setStateZero(true)
    setResults([])
    setquerySuccesful(false)
    setSongToPlay("")
    setSearch("")
    setClearSearchbox(e => e+=1)
  }
  const handleSelectedSongPlay = (id) => {
    setSongToPlay(id)
  }

  const handleSearchonClick = () => {
      setStateZero(false)
      if(search===""){
        setSongToPlay("")
        setquerySuccesful(false)
      }else{
        setSongToPlay("")
        sendQuery(search);
      }
      
  }

  const handleQueryOnChange = (queryValue) => {
      setSearch(queryValue)
  }

  const handleQueryOnEnter = (queryValue, selectedItem) => {
      sendQuery(selectedItem.text);
  }

  return (
    <>
      <Head>
        <title>MMSR APP</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
     
      <main className="flex flex-col justify-between items-center px-10 md:p-24 min-h-screen">
        <NavBar handleHomeOnClick={handleHomeOnClick}></NavBar>
    
        <div className="container mx-auto content">
          <div className="flex justify-center">
            <SearchBar
              trigger={clearSearchbox}
              handleSearchonClick={handleSearchonClick} 
              handleQueryOnChange={handleQueryOnChange} 
              handleQueryOnEnter={handleQueryOnEnter}>
            </SearchBar>
          </div>
         
          
          <hr className="h-px my-8 bg-gray-200 border-0 dark:bg-gray-700" />

          {
            querySuccesful ? 
              <div className="flex flex-row flex-wrap">
                { songToPlay !== "" && 
                  <div className=" basis-full md:basis-2/3 pr-5">
                    <VideoPlayer songToPlay={songToPlay} ></VideoPlayer>  
                  </div>
                }
              
                { results.length !== 0 && 
                  <div className={`${songToPlay !== "" ? 'basis-full md:basis-1/3' : 'basis-full'}`}>

                    <ResultList results={results} handleOnClick={handleSelectedSongPlay} selectedSong={songToPlay}/>

                  </div>
                }

            </div>
            :
            <NoResults initial={stateZero} />
              
          }
         
        </div>
        
      </main>
      <FooterContainer />
     
    </>
  )
}
